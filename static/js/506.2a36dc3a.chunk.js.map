{"version":3,"file":"static/js/506.2a36dc3a.chunk.js","mappings":"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","sources":["components/Button/Button.styled.jsx","components/Button/Button.jsx","pages/MovieDetails.styled.jsx","pages/MovieDetails.jsx","services/moviesApi.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Btn = styled.button`\n  padding: 10px 18px;\n  margin: 0 20px 20px 0;\n  border: none;\n  border-radius: 3px;\n  text-decoration: none;\n  color: #ffffff;\n  font-size: 18px;\n  font-weight: 600;\n  background-color: #0f1926;\n  cursor: pointer;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover,\n  &:focus {\n    color: #0f1926;\n    background-color: #cd1839;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Btn } from './Button.styled';\n\nconst Button = ({ text }) => {\n  return <Btn type=\"button\">{text}</Btn>;\n};\n\nexport default Button;\n\nButton.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: row-reverse;\n  align-items: flex-start;\n  justify-content: space-between;\n  margin-bottom: 24px;\n\n  &::before {\n    content: '';\n    display: block;\n    background-color: rgb(255 255 255);\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    z-index: -1;\n  }\n\n  &::after {\n    content: '';\n    position: fixed;\n    top: 0px;\n    left: -5px;\n    width: calc(100% + 10px);\n    height: calc(100vh + 10px);\n    background-size: cover;\n    background-position: center;\n    background-repeat: no-repeat;\n    background-attachment: fixed;\n    filter: blur(5px);\n    z-index: -1;\n    opacity: 0.35;\n  }\n`;\n\nexport const ImageContainer = styled.div`\n  flex: 0 0 auto;\n  margin-right: 30px;\n`;\n\nexport const Image = styled.img`\n  max-height: 520px;\n  border-radius: 3px;\n  box-shadow: rgba(0, 0, 0, 0.5) 0px 0px 10px;\n  align-self: flex-start;\n`;\n\nexport const Description = styled.div`\n  flex: 1 1 auto;\n`;\n\nexport const ProdCompany = styled.div`\n  display: flex;\n  align-items: center;\n  flex-wrap: wrap;\n  margin: 0;\n  padding: 0;\n  list-style: none;\n  margin-top: 10px;\n`;\n","import React, { useEffect, useState, useRef, Suspense } from 'react';\nimport {\n  useParams,\n  Link,\n  Outlet,\n  useLocation,\n  Navigate,\n} from 'react-router-dom';\nimport { getDetails } from 'services/moviesApi';\nimport Button from 'components/Button/Button';\nimport { Loader } from 'components/Loader/Loader';\nimport image from '../images/image.png';\nimport {\n  Container,\n  Description,\n  ImageContainer,\n  Image,\n  ProdCompany,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movieDetails, setMovieDetails] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const location = useLocation();\n  const backLink = useRef(location.state?.from || '/');\n\n  useEffect(() => {\n    const movieDetailsInfo = async () => {\n      setIsLoading(true);\n      try {\n        const movie = await getDetails(movieId);\n        setMovieDetails(movie);\n        setError('');\n      } catch (error) {\n        setError(error.message);\n        console.error(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    movieDetailsInfo();\n  }, [movieId, setMovieDetails]);\n\n  if (!movieDetails) {\n    return;\n  }\n\n  const prodCompaniesList = movieDetails.production_companies?.map(\n    ({ id, logo_path, name }) =>\n      logo_path && (\n        <li key={id}>\n          {logo_path && (\n            <img\n              src={`https://image.tmdb.org/t/p/w500${logo_path}`}\n              alt={name}\n              style={{\n                maxHeight: 50,\n                maxWidth: 200,\n                marginRight: 30,\n                marginTop: 10,\n              }}\n            />\n          )}\n        </li>\n      )\n  );\n\n  const roundedPopular = Math.round(movieDetails.vote_average * 10);\n\n  return (\n    <div>\n      <Link to={backLink.current}>\n        <Button text=\"Go back\" />\n      </Link>\n      {error && <Navigate to=\"/\" replace />}\n      {isLoading && <Loader />}\n      <Container backdrop={movieDetails.backdrop_path}>\n        <Description>\n          <h1>{movieDetails.title}</h1>\n          <h4>User score: {roundedPopular}%</h4>\n          <h2>Overview</h2>\n          <p>{movieDetails.overview}</p>\n          <h2>Genres</h2>\n          <p>\n            {movieDetails.genres.map(genre => (\n              <span key={genre.id}> {genre.name}</span>\n            ))}\n          </p>\n          {prodCompaniesList[0] !== null && prodCompaniesList.length > 0 && (\n            <>\n              <h2>Production companies</h2>\n              <ProdCompany>{prodCompaniesList}</ProdCompany>\n            </>\n          )}\n        </Description>\n        <ImageContainer>\n          <Image\n            src={\n              movieDetails.poster_path\n                ? `https://image.tmdb.org/t/p/w500${movieDetails.poster_path}`\n                : `${image}`\n            }\n            alt={movieDetails.title}\n          />\n        </ImageContainer>\n      </Container>\n\n      <hr />\n      <h3>Additional information</h3>\n      <Link to=\"cast\">\n        <Button text=\"Cast\" />\n      </Link>\n      <Link to=\"reviews\">\n        <Button text=\"Reviews\" />\n      </Link>\n      <hr />\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = 'fab94b5e93d9dda4c924bebbb4c2a968';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\nexport const getSearchMovies = async searchQuery => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${searchQuery}`\n  );\n  return response.data.results;\n};\n\nexport const getDetails = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getCredits = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const getReviews = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n"],"names":["Btn","styled","text","type","Container","ImageContainer","Image","Description","ProdCompany","movieId","useParams","useState","movieDetails","setMovieDetails","isLoading","setIsLoading","error","setError","location","useLocation","backLink","useRef","state","from","useEffect","movieDetailsInfo","getDetails","movie","message","console","prodCompaniesList","production_companies","map","id","logo_path","name","src","alt","style","maxHeight","maxWidth","marginRight","marginTop","roundedPopular","Math","round","vote_average","to","current","replace","Loader","backdrop","backdrop_path","title","overview","genres","genre","length","poster_path","image","Suspense","fallback","axios","API_KEY","getTrendingMovies","response","data","results","getSearchMovies","searchQuery","getCredits","cast","getReviews"],"sourceRoot":""}
{"version":3,"file":"static/js/186.3f5ecd1a.chunk.js","mappings":"+NA4CA,UAvCgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,8GAEMC,EAAAA,EAAAA,IAAWP,GAFjB,OAEXQ,EAFW,OAGjBJ,EAAWI,GAHM,gDAKjBC,QAAQC,MAAR,MALiB,yDAAH,qDASlBJ,GACD,GAAE,CAACN,KAGF,gCACsB,IAAnBG,EAAQQ,SACP,4BACE,wBAAI,mBACJ,wBACGR,EAAQS,KAAI,SAAAC,GAAM,OACjB,2BACE,uBAAIA,EAAOC,UACX,uBAAID,EAAOE,YAFJF,EAAOG,GADC,SASL,IAAnBb,EAAQQ,SACP,yBAAK,gDAIZ,C,mMCxCDM,EAAAA,EAAAA,SAAAA,QAAyB,gCAEzB,IAAMC,EAAU,mCAEHC,EAAiB,mCAAG,oGACRF,EAAAA,EAAAA,IAAA,qCAAwCC,IADhC,cACzBV,EADyB,yBAExBA,EAASY,KAAKC,SAFU,2CAAH,qDAKjBC,EAAe,mCAAG,WAAMC,GAAN,uFACNN,EAAAA,EAAAA,IAAA,+BACGC,EADH,4DAC8DK,IAFxD,cACvBf,EADuB,yBAItBA,EAASY,KAAKC,SAJQ,2CAAH,sDAOfG,EAAU,mCAAG,WAAMxB,GAAN,uFACDiB,EAAAA,EAAAA,IAAA,gBACZjB,EADY,oBACOkB,EADP,oBADC,cAClBV,EADkB,yBAIjBA,EAASY,MAJQ,2CAAH,sDAOVK,EAAU,mCAAG,WAAMzB,GAAN,uFACDiB,EAAAA,EAAAA,IAAA,gBACZjB,EADY,4BACekB,EADf,oBADC,cAClBV,EADkB,yBAIjBA,EAASY,KAAKM,MAJG,2CAAH,sDAOVnB,EAAU,mCAAG,WAAMP,GAAN,uFACDiB,EAAAA,EAAAA,IAAA,gBACZjB,EADY,4BACekB,EADf,2BADC,cAClBV,EADkB,yBAIjBA,EAASY,KAAKC,SAJG,2CAAH,qD","sources":["components/Reviews/Reviews.jsx","services/moviesApi.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { getReviews } from 'services/moviesApi';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    const movieReviews = async () => {\n      try {\n        const response = await getReviews(movieId);\n        setReviews(response);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    movieReviews();\n  }, [movieId]);\n\n  return (\n    <>\n      {reviews.length !== 0 && (\n        <div>\n          <h2>Movie Reviews</h2>\n          <ul>\n            {reviews.map(review => (\n              <li key={review.id}>\n                <p>{review.author}</p>\n                <p>{review.content}</p>\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n      {reviews.length === 0 && (\n        <div>We don't have any reviews for this movie.</div>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = 'fab94b5e93d9dda4c924bebbb4c2a968';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\nexport const getSearchMovies = async searchQuery => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${searchQuery}`\n  );\n  return response.data.results;\n};\n\nexport const getDetails = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getCredits = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const getReviews = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n"],"names":["movieId","useParams","useState","reviews","setReviews","useEffect","movieReviews","getReviews","response","console","error","length","map","review","author","content","id","axios","API_KEY","getTrendingMovies","data","results","getSearchMovies","searchQuery","getDetails","getCredits","cast"],"sourceRoot":""}